plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    id 'com.google.gms.google-services'
    id 'jacoco'
}

android {
    namespace 'com.lksnext.ParkingXAbaunz'
    compileSdk 35

    defaultConfig {
        applicationId "com.lksnext.ParkingXAbaunz"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    // tus dependencias aqu√≠ ...
}

jacoco {
    toolVersion = "0.8.8"
}

tasks.register("jacocoTestReport", JacocoReport) {
    dependsOn("testDebugUnitTest")

    reports {
        xml.required = true
        html.required = true
    }

    def javaDebugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*'
    ])
    def kotlinDebugTree = fileTree(dir: "$buildDir/intermediates/javac/debug", excludes: [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*'
    ])

    classDirectories.setFrom(files([javaDebugTree, kotlinDebugTree]))
    sourceDirectories.setFrom(files("src/main/java", "src/main/kotlin"))
    executionData.setFrom(fileTree(dir: buildDir, includes: [
            "jacoco/testDebugUnitTest.exec"
    ]))
}

sonarqube {
    properties {
        property "sonar.sources", "app/src/main/java"
        property "sonar.tests", "app/src/test/java"
        property "sonar.junit.reportPaths", "app/build/test-results/testDebugUnitTest"
        property "sonar.coverage.jacoco.xmlReportPaths", "app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    }
}